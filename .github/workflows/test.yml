name: Test

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      # Without this, tests will fail on Windows because Coqfmt uses LF as a
      # newline while the cloned source code contains CRLF.
      - name: Modify the git setting not to convert LF to CRLF
        run: git config --global core.autocrlf input

      - uses: actions/checkout@v3

      # See https://github.com/ocaml-opam/opam-repository-mingw#updates for `opam-repositories`.
      - uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: "4.14.1"
          opam-repositories: |
            opam-repository-mingw: https://github.com/ocaml-opam/opam-repository-mingw.git#sunset
            default: https://github.com/ocaml/opam-repository.git
          dune-cache: true

      - name: Install dependencies
        run: opam install --deps-only .

      # Without `opam exec -- `, these commands will fail due to "dune not found"
      # error.
      - name: Build
        run: opam exec -- dune build

      - name: Run tests with dune
        run: opam exec -- dune test

      - name: Run `Require` test
        run: ./test.sh
        working-directory: ./test/require-test

  prettier:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Run Prettier
        run: npx --yes prettier --check .

  ocamlformat:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - uses: ocaml/setup-ocaml/lint-fmt@v2

  lint_docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - uses: ocaml/setup-ocaml/lint-doc@v2

  test_coq_files:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - name: Install Coq
        run: opam install coq

      - name: List Coq files which did not compile
        run: |
          shopt -s globstar
          find ./test/coq_files/**/*.v -print0|xargs -0 -I{} sh -c 'echo -n "{}: "; opam exec -- coqc -q -vio {} > /dev/null && echo "OK" || exit 255'

  eighty_columns_check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Try
        run: find ./test/coq_files/**/out.v -exec wc -L {} \;

      - name: List formatted Coq files that have a line longer than 80 characters
        run: |
          shopt -s globstar
          find ./test/coq_files/**/out.v -exec wc -L {} \;|awk '$1 > 80 {print $2;error=1} END {exit error}'

  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t coqfmt .

      - name: Run Docker image
        run: docker run --rm coqfmt --version
