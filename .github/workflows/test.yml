name: Test

on:
  push:
    branches:
      - main

  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          # Running on Windows is temporarily disabled because `dune test` hangs.
          # - windows-latest
          #
          # Running on macOS is temporarily disabled due to a build failure of
          # `coq-core`.
          # - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      # Without this, tests will fail on Windows because Coqfmt uses LF as a
      # newline while the cloned source code contains CRLF.
      - name: Modify the git setting not to convert LF to CRLF
        run: git config --global core.autocrlf input

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # See https://github.com/ocaml-opam/opam-repository-mingw#updates for `opam-repositories`.
      - uses: ocaml/setup-ocaml@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2
        with:
          ocaml-compiler: "4.14.1"
          opam-repositories: |
            opam-repository-mingw: https://github.com/ocaml-opam/opam-repository-mingw.git#sunset
            default: https://github.com/ocaml/opam-repository.git
          dune-cache: true

      - name: Install dependencies
        run: opam install --deps-only --with-test .

      # Without `opam exec -- `, these commands will fail due to "dune not found"
      # error.
      - name: Build
        run: opam exec -- dune build

      - name: Run tests with dune
        run: opam exec -- dune test

      - name: Run `Require` test
        run: ./test.sh
        working-directory: ./test/require-test

      - name: Run `_CoqProject` test
        run: ./test.sh
        working-directory: ./test/coq_project_test

  prettier:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run Prettier
        run: npx --yes prettier --check .

  ocamlformat:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ocaml/setup-ocaml@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - uses: ocaml/setup-ocaml/lint-fmt@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2

  lint_docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ocaml/setup-ocaml@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - uses: ocaml/setup-ocaml/lint-doc@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2

  test_coq_files:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ocaml/setup-ocaml@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - name: Install Coq
        run: opam install coq

        # `-vos` for fast compilation.
      - name: List Coq files which did not compile
        run: |
          shopt -s globstar
          find ./test/coq_files/**/*.v -print0|xargs -0 -I{} sh -c 'echo -n "{}: "; opam exec -- coqc -q -vos {} > /dev/null && echo "OK" || exit 255'

  opamlint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ocaml/setup-ocaml@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2
        with:
          ocaml-compiler: "4.14.1"
          dune-cache: true

      - uses: ocaml/setup-ocaml/lint-opam@f400bf35a4a9a6e8320364440de51b2c2bad95a4 # v3.3.2

  ensure_trailing_newline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: List all non-empty files tracked by git that do not end with a newline
        run: git ls-files | xargs -I {} sh -c '[ -s "{}" ] && echo "{}"' | xargs -I {} sh -c 'tail -c 1 {} | read -r _ || (echo "{}"; false)'

  markdown-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: DavidAnson/markdownlint-cli2-action@05f32210e84442804257b2a6f20b273450ec8265 # v19.1.0
